# Generated by Django 2.1.7 on 2019-03-15 02:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appliances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appliances_in_residence', models.CharField(choices=[('fridge', 'fridge'), ('freezer', 'seperate freezer'), ('washer', 'washing machine'), ('dryer', 'drying machine'), ('stove', 'stovetop'), ('oven', 'oven'), ('microwave', 'microwave'), ('computer', 'computer'), ('television', 'television'), ('furnace', 'furnace'), ('boiler', 'boiler'), ('ac', 'air conditioning'), ('lights', 'lights'), ('shower', 'shower')], max_length=50)),
                ('high_efficiency_appliances', models.CharField(choices=[('fridge', 'fridge'), ('freezer', 'seperate freezer'), ('washer', 'washing machine'), ('dryer', 'drying machine'), ('stove', 'stovetop'), ('oven', 'oven'), ('microwave', 'microwave'), ('computer', 'computer'), ('television', 'television'), ('furnace', 'furnace'), ('boiler', 'boiler'), ('ac', 'air conditioning'), ('lights', 'lights'), ('shower', 'shower')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Bicycle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journey_time', models.IntegerField(verbose_name='When you ride the bike, how many minutes is a typical journey?')),
                ('spring_journeys', models.IntegerField(verbose_name='How many journeys do you take on your bike in a typical week from April to May?')),
                ('summer_journeys', models.IntegerField(verbose_name='How many journeys do you take on your bike in a typical week from June to August?')),
                ('autumn_journeys', models.IntegerField(verbose_name='How many journeys do you take on your bike in a typical week from September to October?')),
                ('winter_journeys', models.IntegerField(verbose_name='How many journeys do you take on your bike in a typical week from November to March?')),
            ],
        ),
        migrations.CreateModel(
            name='Electricity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('january_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in January?')),
                ('february_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in February?')),
                ('march_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in March?')),
                ('april_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in April?')),
                ('may_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in May?')),
                ('june_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in June?')),
                ('july_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in July?')),
                ('august_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in August?')),
                ('september_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in September?')),
                ('october_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in October?')),
                ('november_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in November?')),
                ('december_electricity', models.IntegerField(verbose_name='How many kwh of electricity did your household use in December?')),
                ('january_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in January?')),
                ('february_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in February?')),
                ('march_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in March?')),
                ('april_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in April?')),
                ('may_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in May?')),
                ('june_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in June?')),
                ('july_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in July?')),
                ('august_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in August?')),
                ('september_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in September?')),
                ('october_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in October?')),
                ('november_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in November?')),
                ('december_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your electricity bill in December?')),
            ],
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How many hours was this flight?')),
                ('round_trip', models.BooleanField(null=True, verbose_name='was this flight round trip?')),
                ('cost', models.IntegerField(verbose_name='How much did this flight cost?')),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diet', models.CharField(choices=[('omnivore', 'omnivore'), ('beefless', 'omnivore but no beef'), ('vegetarian', 'vegetarian (eggs and cheese but no meat)'), ('vegan', 'vegan (no animal products')], max_length=50, verbose_name='What is the best way to describe your diet?')),
                ('food_intake', models.CharField(choices=[(1.5, 'a lot more than other people my age'), (1.25, 'somewhat more than other people my age'), (1, 'about the same as other people my age'), (0.75, 'somewhat less than other people my age'), (0.5, 'a lot less than other people my age')], max_length=50, verbose_name='What is the best way to describe the amount of food you eat?')),
                ('local_share', models.IntegerField(verbose_name='What percentage of your diet is composed of locally sourced food?')),
                ('seasonal', models.BooleanField(verbose_name='Do you buy fruits and vegtables out of season?')),
                ('grocery_cost', models.IntegerField(verbose_name='How much do you spend on groceries in a typical week?')),
                ('restaurant_cost', models.IntegerField(verbose_name='How much do you spend on food from restaurants in a typical week?')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Household',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utilities_included', models.BooleanField(verbose_name='Are utilities included in your rent?')),
                ('electricity_bills', models.BooleanField(verbose_name='Can you get access to your electricity bill?')),
                ('renewable_energy_share', models.IntegerField(default=12.3, verbose_name='What percentage of your energy comes from renewables?')),
                ('biogas_share', models.IntegerField(default=0, verbose_name='What percentage of your natural gas comes from biogas?')),
                ('gas_bills', models.BooleanField(verbose_name='Can you get access to your electricity bill?')),
                ('residents', models.IntegerField(verbose_name='How many people share this residence?')),
                ('size', models.IntegerField(verbose_name='How many square feet is this residence?')),
                ('housing_cost', models.IntegerField(verbose_name='What is your monthly rent or mortgage on this property?')),
                ('able_to_move', models.BooleanField(verbose_name='Is it feasible for you to change residences in the next year or so?')),
                ('building_type', models.CharField(choices=[('detached', 'detached house'), ('apartment', 'apartmnet or condo'), ('detached', 'detached house'), ('walkup', 'walk up apartment')], max_length=50)),
                ('owernship_type', models.CharField(choices=[('owned', 'homeowner'), ('landlord', 'renting from a private landlord or owner'), ('corporation', 'renting from a corporation or other organization'), ('family', 'living with family')], max_length=50)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NaturalGas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('january_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in January?')),
                ('february_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in February?')),
                ('march_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in March?')),
                ('april_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in April?')),
                ('may_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in May?')),
                ('june_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in June?')),
                ('july_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in July?')),
                ('august_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in August?')),
                ('september_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in September?')),
                ('october_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in October?')),
                ('november_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in November?')),
                ('december_natural_gas', models.IntegerField(verbose_name='How many GJ of natural gas did your household use in December?')),
                ('january_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in January?')),
                ('february_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in February?')),
                ('march_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in March?')),
                ('april_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in April?')),
                ('may_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in May?')),
                ('june_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in June?')),
                ('july_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in July?')),
                ('august_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in August?')),
                ('september_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in September?')),
                ('october_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in October?')),
                ('november_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in November?')),
                ('december_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How much was your natural gas bill in December?')),
                ('household', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interview.Household')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='What is your age?')),
                ('sex', models.CharField(blank=True, choices=[('m', 'male'), ('f', 'female'), ('n', 'I prefer not to say')], max_length=50, null=True, verbose_name='What is your biological sex (used for food intake estimation)?')),
                ('annual_income', models.IntegerField(blank=True, null=True, verbose_name='What is your annual income before taxes?')),
                ('savings', models.IntegerField(blank=True, null=True, verbose_name='How much money do you save on a yearly basis? Use negative numbers to represent net borrowing.')),
                ('hours_worked', models.IntegerField(blank=True, null=True, verbose_name='How many hours do you spend working in a typical week?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rideshare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journeys', models.IntegerField(verbose_name='How often do you use cabs or ridesharing services in a typical month?')),
                ('journey_time', models.IntegerField(verbose_name='When you use cabs or ridesharing services, how many minutes is a typical journey?')),
                ('cost', models.IntegerField(verbose_name='How much do you spend on cab fare and ride sharing services in a typical month?')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('electricity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='how many kwh of electricity do you use per month?')),
                ('natgas', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='how many GJ of natural gas do you use per month?')),
                ('gasoline', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='how many litres of gasoline do you use per month?')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('train_journeys', models.IntegerField(verbose_name='How many times do you ride the train on a typical week?')),
                ('train_journey_time', models.IntegerField(verbose_name='When you ride the train, how many minutes is a typical journey?')),
                ('bus_journeys', models.IntegerField(verbose_name='How many times do you ride the bus on a typical week?')),
                ('bus_journey_time', models.IntegerField(verbose_name='When you ride the bus, how many minutes is a typical journey?')),
                ('cost', models.IntegerField(verbose_name='How much do you spend on transit costs in a typical month?')),
            ],
        ),
        migrations.CreateModel(
            name='Transportation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicles_owned', models.IntegerField(verbose_name='How many vehicles do you own?')),
                ('flights_taken', models.IntegerField(verbose_name='How many flights did you take last year?')),
                ('use_rideshare', models.BooleanField(verbose_name='Do you carpool, use taxis, or use ridesharing services?')),
                ('ride_public_transit', models.BooleanField(verbose_name='Do you use public transit?')),
                ('own_summer_bike', models.BooleanField(verbose_name='Do you own a bike that can be used when there is no snow on the ground?')),
                ('own_winter_bike', models.BooleanField(verbose_name='Do you own a bike that can be used when there is snow on the ground?')),
                ('distance_to_work', models.IntegerField(verbose_name='How many kilometers from your house to your workplace?')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('garbage_bin_volume', models.IntegerField(verbose_name='How many litres does your trash bin hold?')),
                ('garbage_bin_fill_time', models.IntegerField(verbose_name='How many days does it usually take before you need to take out the trash?')),
                ('household', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interview.Household')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(choices=[('diesel', 'diesel'), ('gasoline', 'gasoline')], default='gasoline', max_length=50)),
                ('fuel_economy_city', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How many L/100 km does your vehicle get in the city?')),
                ('fuel_economy_highway', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How many L/100 km does your vehicle get on the highway?')),
                ('km_driven_city', models.IntegerField(verbose_name='How many kilometers do you drive in the city with this vehicle during a typical month?')),
                ('km_driven_highway', models.IntegerField(verbose_name='How many kilometers do you drive on the freeway with this vehicle during a typical month?')),
                ('fuel_ups', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='How many full tanks of gas do you put in your vehicle during a typical month? Decimals are allowed.')),
                ('tank_size', models.IntegerField(verbose_name='How many litres of gasoline does your tank hold?')),
                ('vehicle_cost', models.IntegerField(verbose_name='How much do you spend on auto payments, insurance, registration and repairs for this vehicle in a typical year?')),
                ('fuel_cost', models.IntegerField(verbose_name='How much do you spend on fuel in a typical month?')),
                ('transportation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interview.Transportation')),
            ],
        ),
        migrations.AddField(
            model_name='transit',
            name='transportation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interview.Transportation'),
        ),
        migrations.AddField(
            model_name='rideshare',
            name='transportation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interview.Transportation'),
        ),
        migrations.AddField(
            model_name='flight',
            name='transportation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interview.Transportation'),
        ),
        migrations.AddField(
            model_name='electricity',
            name='household',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interview.Household'),
        ),
        migrations.AddField(
            model_name='bicycle',
            name='transportation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interview.Transportation'),
        ),
        migrations.AddField(
            model_name='appliances',
            name='household',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interview.Household'),
        ),
    ]
